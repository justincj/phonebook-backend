{"version":3,"sources":["components/PersonForm.js","components/Filter.js","components/Persons.js","services/person.js","components/Notification.js","App.js","index.js"],"names":["PersonForm","persons","onSubmit","handleUpdate","useState","newName","setNewName","newNumber","setNewNumber","handleSubmission","e","a","preventDefault","person","name","toLowerCase","window","confirm","id","numberid","newperson","value","onChange","target","type","Filter","search","handleSearch","Persons","handleDelete","onClick","baseURL","axios","get","then","response","data","post","delete","updateObject","put","Notification","message","className","App","setPersons","setSearch","successMessage","setSuccessMessage","errorMessage","setErrorMessage","useEffect","PersonServices","initialPeople","personsToShow","filter","startsWith","event","returnedPerson","setTimeout","catch","error","console","log","personObject","updatedPerson","map","key","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0fdbce13.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nconst PersonForm = ({ persons, onSubmit, handleUpdate }) => {\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n\n  const handleSubmission = async (e) => {\n    e.preventDefault();\n    for (let person of persons) {\n      if (person.name.toLowerCase() === newName.toLowerCase()) {\n        if (\n          window.confirm(\n            `${person.name} is already added to phonebook, replace the old number with new one`\n          )\n        ) {\n          handleUpdate(person.id, { ...person, numberid: newNumber });\n          setNewName(\"\");\n          setNewNumber(\"\");\n          return;\n        }\n        onSubmit(person);\n        setNewName(\"\");\n        setNewNumber(\"\");\n        return;\n      }\n    }\n    const newperson = { name: newName, numberid: newNumber };\n    await onSubmit(newperson);\n    setNewName(\"\");\n    setNewNumber(\"\");\n  };\n  return (\n    <form onSubmit={handleSubmission}>\n      <div>\n        name:{\" \"}\n        <input value={newName} onChange={(e) => setNewName(e.target.value)} />\n      </div>\n      <div>\n        number:{\" \"}\n        <input\n          value={newNumber}\n          onChange={(e) => setNewNumber(e.target.value)}\n        />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  );\n};\n\nexport default PersonForm;\n","import React from \"react\";\n\nconst Filter = ({ search, handleSearch }) => (\n  <div>\n    filter shown with\n    <input value={search} onChange={handleSearch} />\n  </div>\n);\n\nexport default Filter;\n","import React from \"react\";\n\nconst Persons = ({ person, handleDelete }) => (\n  <p>\n    {person.name} {person.numberid}\n    <button onClick={handleDelete}>delete</button>\n  </p>\n);\n\nexport default Persons;\n","import axios from \"axios\";\nconst baseURL = \"/api/persons\";\n\nconst getAll = () => {\n  const request = axios.get(baseURL);\n  return request.then((response) => response.data);\n};\n\nconst create = (person) => {\n  const request = axios.post(baseURL, person);\n  return request.then((response) => response.data);\n};\n\nconst update = (id, updateObject) => {\n  const request = axios.put(`${baseURL}/${id}`, updateObject);\n  return request.then((response) => response.data);\n};\n\nconst remove = (id) => {\n  return axios.delete(`${baseURL}/${id}`);\n};\n\nexport default { getAll, create, remove, update };\n","import React from \"react\";\n\nconst Notification = ({ message, type }) => {\n  if (message === null) {\n    return null;\n  }\n  return <p className={type}>{message}</p>;\n};\n\nexport default Notification;\n","import React, { useState, useEffect } from \"react\";\nimport PersonForm from \"./components/PersonForm\";\nimport Filter from \"./components/Filter\";\nimport Persons from \"./components/Persons\";\nimport PersonServices from \"./services/person\";\nimport Notification from \"./components/Notification\";\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [successMessage, setSuccessMessage] = useState(null);\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  useEffect(() => {\n    PersonServices.getAll().then((initialPeople) => {\n      setPersons(initialPeople);\n    });\n  }, []);\n\n  const handleUpdate = (id, personObject) => {\n    PersonServices.update(id, personObject)\n      .then((updatedPerson) => {\n        setPersons(\n          persons.map((person) => (person.id !== id ? person : personObject))\n        );\n      })\n      .catch((error) => {\n        setErrorMessage(\n          `Information ${personObject.name} is already deleted from server`\n        );\n        setPersons(persons.filter((person) => person.id !== id));\n        setTimeout(() => {\n          setErrorMessage(null);\n        }, 3000);\n      });\n  };\n\n  const handleSearch = (event) => setSearch(event.target.value);\n\n  const handleSubmission = (person) => {\n    PersonServices.create(person)\n      .then((returnedPerson) => {\n        setPersons([...persons, returnedPerson]);\n        setSuccessMessage(`Added ${person.name}`);\n        setTimeout(() => {\n          setSuccessMessage(null);\n        }, 3000);\n      })\n      .catch((error) => {\n        console.log(error.response.data);\n        setErrorMessage(error.response.data.error);\n        setTimeout(() => {\n          setErrorMessage(null);\n        }, 3000);\n      });\n  };\n\n  const handleDelete = (id) => {\n    const person = persons.filter((person) => person.id === id);\n    if (window.confirm(`delete ${person[0].name}?`)) {\n      PersonServices.remove(id).then((response) => {\n        setPersons(persons.filter((person) => person.id !== id));\n      });\n    }\n  };\n\n  const personsToShow = search\n    ? persons.filter((person) =>\n        person.name.toLowerCase().startsWith(search.toLowerCase())\n      )\n    : persons;\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      {successMessage ? (\n        <Notification message={successMessage} type=\"success\" />\n      ) : (\n        <Notification message={errorMessage} type=\"error\" />\n      )}\n\n      <Filter search={search} handleSearch={handleSearch} />\n      <h2>Add a new</h2>\n      <PersonForm\n        persons={persons}\n        onSubmit={handleSubmission}\n        handleUpdate={handleUpdate}\n      />\n      <h2>Numbers</h2>\n      {personsToShow.map((person) => (\n        <Persons\n          key={person.name}\n          person={person}\n          handleDelete={() => handleDelete(person.id)}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}